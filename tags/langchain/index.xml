<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Langchain on scovl</title>
    <link>https://scovl.github.io/tags/langchain/</link>
    <description>Recent content in Langchain on scovl</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <copyright>Vitor Lobo</copyright>
    <lastBuildDate>Tue, 23 Jan 2024 19:00:00 +0000</lastBuildDate>
    <atom:link href="https://scovl.github.io/tags/langchain/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RAG Simples com Clojure e Ollama</title>
      <link>https://scovl.github.io/2024/01/23/rag/</link>
      <pubDate>Tue, 23 Jan 2024 19:00:00 +0000</pubDate>
      <guid>https://scovl.github.io/2024/01/23/rag/</guid>
      <description>Sum√°rio O que √© RAG e por que precisamos dele? Por que isso √© um problema? E √© a√≠ que entra o RAG! Construindo uma aplica√ß√£o RAG simples Preparando o ambiente Estrutura do projeto Usando Ollama para LLMs locais sem API keys Como usar? Considera√ß√µes importantes Pr√≥ximos passos Langchain4j para simplificar a cria√ß√£o de RAG Ol√°, pessoal! üëã&#xA;Neste artigo, vamos explorar como construir uma aplica√ß√£o RAG (Retrieval-Augmented Generation) completa do zero usando Clojure.</description>
    </item>
  </channel>
</rss>
