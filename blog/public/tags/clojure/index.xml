<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clojure on scovl</title>
    <link>http://localhost:1313/tags/clojure/</link>
    <description>Recent content in Clojure on scovl</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <copyright>Vitor Lobo</copyright>
    <lastBuildDate>Wed, 24 Jan 2024 19:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/clojure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Streams em Clojure: Uma Abordagem Funcional</title>
      <link>http://localhost:1313/2024/01/24/streams/</link>
      <pubDate>Wed, 24 Jan 2024 19:00:00 +0000</pubDate>
      <guid>http://localhost:1313/2024/01/24/streams/</guid>
      <description>Streams em Clojure: Uma Abordagem Funcional Introdução A programação funcional tem se tornado cada vez mais relevante no desenvolvimento de software moderno. Enquanto o Java introduziu streams e programação funcional no JDK 8, o Clojure já nasceu com uma abordagem funcional nativa. Neste artigo, vamos explorar como os streams são implementados em Clojure e comparar com a implementação do Java.&#xA;Fundamentos de Streams O que são Streams? Streams são sequências de elementos que podem ser processados de forma funcional.</description>
    </item>
  </channel>
</rss>
